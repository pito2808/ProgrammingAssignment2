## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function
## function create a object contained a matrix and its basic functions
## which can cache its inverse
makeCacheMatrix <- function(x = matrix()) {
	#m <- solve(x)	
	#print (m)
	i <- NULL
	set <- function(y) {
		x <<- y
		i <<- NULL
	}
	get <- function() x
	setsolve <- function(solve) i <<- solve
	getsolve <- function() i
	list(set = set , get = get ,
	     setsolve = setsolve,
	     getsolve = getsolve)
}


## Write a short comment describing this function
## the function computes the inverse of the special matrix
## from makeCacheMatrix, if inverse has already been calculated
## the function return only the inverse from the cache
cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
	i <- x$getsolve()
	if (!is.null(i)) {
		message("getting cached data")
		return(i)
	}
	data <- x$get()
	i <- solve(data)
	x$setsolve(i)
	i
}
